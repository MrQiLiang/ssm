<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd
                        http://www.springframework.org/schema/cache
                        http://www.springframework.org/schema/cache/spring-cache-4.2.xsd">



    <!-- 读取redis配置文件,配置多个数据源需要配置 ignore-unresolvable="true"-->
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>

    <cache:annotation-driven cache-manager="redisCacheManager"/>

    <bean id="redisCacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="com.lq.code.cache.RedisCache">
                    <property name="name" value="myCache"/>
                    <property name="redisTemplate" ref="redisTempale"/>
                </bean>

            </set>
        </property>
    </bean>



    <!-- redis 连接池配置属性-->
    <bean id="jedisConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--最大连接数-->
        <property name="maxTotal" value="${redis.maxTotal}"></property>
        <!--最大空闲连接数-->
        <property name="maxIdle" value="${redis.maxIdle}"></property>
        <!--每次释放连接的最大数目-->
        <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}"></property>
        <!--释放连接的扫描间隔(单位：毫秒)-->
        <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}"></property>
        <!--连接最小空闲时间-->
        <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}"></property>
        <!--连接空闲多久后释放，当空闲时间>该值 且 空闲连接>最大空闲连接数时 直接释放-->
        <property name="softMinEvictableIdleTimeMillis" value="${redis.softMinEvictableIdleTimeMillis}"></property>
        <!-- 获取连接时的最大等待毫秒数，小于零：阻塞不确定时间，默认-1 -->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"></property>
        <!-- 获取连接时时候检查有效性,默认false-->
        <property name="testOnBorrow" value="${redis.testOnBorrow}"></property>
        <!-- 在空闲时检查有效性，默认false -->
        <property name="testWhileIdle" value="${redis.testWhileIdle}"></property>
        <!--连接耗尽时是否阻塞,false报异常,true阻塞直到超时,默认true-->
        <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}"></property>

    </bean>

    <!-- redis 工厂-->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy"
    p:hostName="${redis.host}"
    p:port="${redis.port}"
    p:poolConfig-ref="jedisConfig"
    />


    <bean id="redisTempale" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"></property>
        <!-- 如果不配置Sericalizer,那么存储的时候只能使用String,如果用对象存储,就会提示错误 can,t cast to String-->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>

        <!--开启事务-->
        <property name="enableTransactionSupport" value="true"/>
    </bean>





</beans>